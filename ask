#!/usr/bin/env zsh

# Function to send a base64-encoded prompt to Google Gemini using curl
send_prompt_to_gemini() {
    local prompt="$1"
    local use_markdown_table="$2"
    local api_key="$GOOGLE_API_KEY"
    local api_url="https://generativelanguage.googleapis.com/v1/models/gemini-pro:generateContent?key=$api_key"

    # Encode the prompt as base64
    local encoded_prompt=$(echo -n "$prompt" | base64)

    # Send the request and capture the response, then base64 encode the entire JSON response
    local response=$(curl -s -X POST "$api_url" \
        -H "Content-Type: application/json" \
        -d '{
            "contents": [{
                "parts": [
                    {
                        "inline_data": {
                            "mime_type":"text/plain",
                            "data": "'"$encoded_prompt"'"
                        }
                    }
                ]
            }]
        }' | base64)

    # Extract the text response and safety ratings using jq
    local text_response=$(echo "$response" | base64 --decode | jq -r '.candidates[0].content.parts[0].text')
    local safety_ratings=$(echo "$response" | base64 --decode | jq -r '.candidates[0].safetyRatings[] | "\(.category): \(.probability)"')

    # Display the results
    if [ "$use_markdown_table" = "true" ]; then
        # Display the results in a Markdown table format
        echo "| Generated Content |"
        echo "|-------------------|"
        echo "| $text_response    |"
        echo
        echo "| Safety Ratings    |"
        echo "|-------------------|"
        echo "$safety_ratings" | while read -r line; do
            echo "| $line |"
        done
    else
       echo $text_response
    fi
}

# Check if a prompt was provided as an argument
if [ -z "$1" ]; then
    echo "Usage: $0 <prompt> [--glow] [--markdown]"
    exit 1
fi

# Default options
use_markdown_table="false"
use_glow="false"

# Parse the options
for arg in "$2" "$3"; do
    if [ "$arg" = "--markdown" ]; then
        use_markdown_table="true"
    elif [ "$arg" = "--glow" ]; then
        use_glow="true"
    fi
done

# Execute with or without glow
if [ "$use_glow" = "true" ]; then
    send_prompt_to_gemini "$1" "$use_markdown_table" | glow
else
    send_prompt_to_gemini "$1" "$use_markdown_table"
fi
